{
  "env": {
    "BASH_DEFAULT_TIMEOUT_MS": "900000",
    "BASH_MAX_TIMEOUT_MS": "900000",
    "MCP_TIMEOUT": "900000",
    "MCP_TOOL_TIMEOUT": "900000"
  },
  "permissions": {
    "allow": [
      "mcp__serena__activate_project",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__onboarding",
      "mcp__serena__list_dir",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__search_for_pattern",
      "mcp__serena__find_file",
      "mcp__serena__replace_regex",
      "mcp__serena__find_symbol",
      "mcp__serena__think_about_collected_information",
      "mcp__serena__write_memory",
      "mcp__serena__think_about_whether_you_are_done",
      "mcp__serena__insert_after_symbol",
      "mcp__serena__find_referencing_symbols",
      "mcp__serena__replace_symbol_body",
      "mcp__serena__insert_before_symbol",
      "Bash(mkdir:*)",
      "Bash(pnpm dlx:*)",
      "Bash(pnpm typecheck:*)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm exec:*)",
      "Bash(pnpm test:e2e:*)",
      "Bash(pnpm format:check:*)",
      "Bash(pnpm format:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm eslint:*)",
      "Bash(grep:*)",
      "Bash(gitleaks detect:*)",
      "Bash(gh run view:*)",
      "Bash(gh workflow:*)",
      "WebFetch(domain:docs.github.com)",
      "Bash(mv:*)",
      "Bash(pnpm quality:report:*)",
      "Bash(pnpm metrics:build:*)",
      "Bash(pnpm quality:check:*)",
      "Bash(pnpm quality:analyze:*)",
      "Bash(git add:*)",
      "WebFetch(domain:github.com)",
      "Bash(pnpm vitest:*)",
      "Bash(node:*)",
      "Bash(pnpm tsx:*)",
      "Bash(rm:*)",
      "Bash(pnpm precommit:fix:*)",
      "Bash(pnpm precommit:check:*)",
      "WebFetch(domain:nextjs.org)",
      "Bash(npx eslint:*)",
      "Bash(pnpm playwright test:*)",
      "Bash(cat:*)",
      "Bash(pnpm lighthouse:collect:*)",
      "Bash(pnpm lighthouse:assert:*)",
      "Bash(pnpm docs:*)",
      "Bash(pnpm release:check:*)",
      "WebSearch",
      "Bash(pnpm changeset:add:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "WebFetch(domain:tailwindcss.com)",
      "mcp__serena__think_about_task_adherence",
      "mcp__ide__getDiagnostics",
      "Bash(.husky/pre-push:*)",
      "WebFetch(domain:grafana.com)",
      "mcp__serena__read_memory",
      "Bash(npx vitest run:*)",
      "Bash(pnpm run:*)",
      "mcp__serena__list_memories",
      "Bash(npx playwright test:*)",
      "Bash(docker compose:*)",
      "Bash(docker run:*)",
      "Bash(npx vitest:*)",
      "Bash(gh run list:*)",
      "Bash(pnpm docker:test:*)",
      "Bash(time pnpm docker:test:unit)",
      "Bash(docker-compose:*)",
      "Bash(docker:*)",
      "Bash(curl:*)",
      "Bash(pnpm docker:monitoring:*)",
      "WebFetch(domain:hub.docker.com)",
      "Bash(find:*)",
      "Bash(pnpm typedoc:*)"
    ],
    "deny": [
      "Bash(sudo *)",
      "Bash(rm -rf /)",
      "Bash(rm -rf ~)",
      "Bash(rm -rf ~/*)",
      "Bash(rm -rf /*)",
      "npm install",
      "npm uninstall",
      "npm update",
      "yarn add",
      "yarn remove",
      "yarn upgrade",
      "pnpm add",
      "pnpm remove",
      "pnpm update",
      "bun add",
      "bun remove"
    ],
    "defaultMode": "acceptEdits"
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": ["serena"]
}
